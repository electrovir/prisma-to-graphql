"use strict";
// generated by prisma-to-graphql
Object.defineProperty(exports, "__esModule", { value: true });
exports.operationParams = exports.Post_DistinctInput = exports.User_DistinctInput = exports.NullsOrder = exports.SortOrder = void 0;
var SortOrder;
(function (SortOrder) {
    SortOrder["asc"] = "asc";
    SortOrder["desc"] = "desc";
})(SortOrder || (exports.SortOrder = SortOrder = {}));
var NullsOrder;
(function (NullsOrder) {
    NullsOrder["first"] = "first";
    NullsOrder["last"] = "last";
})(NullsOrder || (exports.NullsOrder = NullsOrder = {}));
var User_DistinctInput;
(function (User_DistinctInput) {
    User_DistinctInput["id"] = "id";
    User_DistinctInput["createdAt"] = "createdAt";
    User_DistinctInput["updatedAt"] = "updatedAt";
})(User_DistinctInput || (exports.User_DistinctInput = User_DistinctInput = {}));
var Post_DistinctInput;
(function (Post_DistinctInput) {
    Post_DistinctInput["id"] = "id";
    Post_DistinctInput["createdAt"] = "createdAt";
    Post_DistinctInput["updatedAt"] = "updatedAt";
})(Post_DistinctInput || (exports.Post_DistinctInput = Post_DistinctInput = {}));
exports.operationParams = {
    Mutation: {
        Users: {
            args: {
                create: 'User_CreateInput',
                update: 'User_UpdateInput',
                upsert: 'User_UpsertInput',
            },
            output: 'User_QueryOutput!',
        },
        Posts: {
            args: {
                create: 'Post_CreateInput',
                update: 'Post_UpdateInput',
                upsert: 'Post_UpsertInput',
            },
            output: 'Post_QueryOutput!',
        },
    },
    Query: {
        Users: {
            args: {
                where: 'User_WhereInput!',
                orderBy: '[User_OrderByInput!]',
                cursor: 'User_WhereUnfilteredUniqueInput',
                distinct: '[User_DistinctInput!]',
                take: 'Int',
                skip: 'Int',
            },
            output: 'User_QueryOutput!',
        },
        Posts: {
            args: {
                where: 'Post_WhereInput!',
                orderBy: '[Post_OrderByInput!]',
                cursor: 'Post_WhereUnfilteredUniqueInput',
                distinct: '[Post_DistinctInput!]',
                take: 'Int',
                skip: 'Int',
            },
            output: 'Post_QueryOutput!',
        },
    },
};
