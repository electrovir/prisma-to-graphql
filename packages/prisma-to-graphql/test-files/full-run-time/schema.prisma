generator jsClient {
    provider = "prisma-client-js"
    output   = "../../node_modules/.prisma"
}

generator graphql {
    provider = "prisma-to-graphql"
    output   = "../../node_modules/.prisma/graphql"
}

datasource db {
    provider = "sqlite"
    url      = "file:../../../../.not-committed/full-run-time-test/dev.db"
}

model User {
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    email    String
    /// @graphql-omit {output: true}
    password String

    firstName   String?
    lastName    String?
    role        String?
    phoneNumber String?

    settings UserSettings?
    posts    UserPost[]
}

model UserPost {
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    title String
    body  String

    userId String
    user   User   @relation(fields: [userId], references: [id])
}

model UserSettings {
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    receivesMarketingEmails Boolean @default(false)
    canViewReports          Boolean @default(false)

    userId String @unique

    stats UserStats?
    user  User       @relation(fields: [userId], references: [id])
}

model UserStats {
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    likes    Int
    dislikes Int
    views    Int

    userSettingsId String       @unique
    settings       UserSettings @relation(fields: [userSettingsId], references: [id])
}
