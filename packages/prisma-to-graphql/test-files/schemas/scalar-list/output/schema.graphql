# generated by prisma-to-graphql

type Mutation {
    SomeModels(
        create: SomeModel_CreateInput
        update: SomeModel_UpdateInput
        upsert: SomeModel_UpsertInput
        delete: SomeModel_DeleteInput
    ): SomeModel_Output!
}

type Query {
    SomeModels(
        where: SomeModel_WhereInput
        orderBy: [SomeModel_OrderByInput!]
        cursor: SomeModel_WhereUnfilteredUniqueInput
        distinct: [SomeModel_DistinctInput!]
        take: Int
    ): SomeModel_Output!
}

enum SortOrder {
    asc
    desc
}

enum NullsOrder {
    first
    last
}

enum SomeModel_DistinctInput {
    id
    multiScalar
}

type _AllModels {
    SomeModel: SomeModel
}

type SomeModel {
    id: ID!
    multiScalar: [String]!
}

input SortOrderWithNulls {
    sort: SortOrder!
    nulls: NullsOrder
}

type SomeModel_Output {
    # Total count of items found or modified.
    # This count is not affected by pagination (it always counts all results).
    total: Int!
    items: [SomeModel!]!
    messages: [OutputMessage]!
}

type OutputMessage {
    code: String!
    message: String!
    description: String!
}

input OrderByCount {
    _count: SortOrder
}

input SomeModel_WhereInput {
    AND: [SomeModel_WhereInput!]
    OR: [SomeModel_WhereInput!]
    NOT: [SomeModel_WhereInput!]
    id: ID_WhereInput
    multiScalar: String_WhereManyInput
}

input SomeModel_OrderByInput {
    id: SortOrder
    multiScalar: OrderByCount
}

input SomeModel_WhereUnfilteredUniqueInput {
    AND: [SomeModel_WhereInput!]
    OR: [SomeModel_WhereInput!]
    NOT: [SomeModel_WhereInput!]
    id: String
    multiScalar: String_WhereManyInput
}

input ID_WhereInput {
    equals: ID
    in: [ID!]
    notIn: [ID!]
    lt: ID
    lte: ID
    gt: ID
    gte: ID
    not: ID_WhereInput
    contains: ID
    startsWith: ID
    endsWith: ID
}

input String_WhereManyInput {
    equals: [String]
    has: String
    hasEvery: [String]
    hasSome: [String]
    isEmpty: Boolean
}

input SomeModel_WhereManyInput {
    every: SomeModel_WhereInput
    none: SomeModel_WhereInput
    some: SomeModel_WhereInput
}

input SomeModel_CreateInput {
    data: [SomeModel_CreateDataInput!]!
}

input SomeModel_UpdateInput {
    data: SomeModel_UpdateDataInput!
    where: SomeModel_WhereUnfilteredUniqueInput!
}

input SomeModel_UpsertInput {
    data: SomeModel_UpdateDataInput!
    where: SomeModel_WhereRequiredProvidedUniqueInput!
}

input SomeModel_DeleteInput {
    where: SomeModel_WhereInput!
}

input SomeModel_WhereRequiredProvidedUniqueInput {
    id: String!
    multiScalar: String_WhereManyInput
}

input SomeModel_CreateDataInput {
    id: String
    multiScalar: String!
}

input SomeModel_UpdateDataInput {
    id: String
    multiScalar: String
}
